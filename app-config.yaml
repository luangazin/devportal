app:
  title: Devportal
  baseUrl: http://localhost:3000
  analytics: #https://github.com/backstage/backstage/blob/master/plugins/analytics-module-ga/README.md
    ga:
      trackingId: UA-0000000-0 #Id
      identity: optional #or required
      debug: true # for development
      testMode: true # for development
      # customDimensionsMetrics: # for development
      #   - type: dimension 
      #     index: 1 
      #     source: context
      #     key: pluginId
      # virtualSearchPageView:  # seach website 
      #   mode: only # Defaults to 'disabled'
      #   mountPath: /virtual-search # Defaults to '/search'
      #   searchQuery: term # Defaults to 'query'
      #   categoryQuery: sc # Omitted by default

  support:
    url: https://github.com/orgs/veecode-platform/discussions # Used by common ErrorPage
    items: # Used by common SupportButton component
      - title: Issues
        icon: github
        links:
          - url: https://github.com/orgs/veecode-platform/discussions
            title: GitHub Issues
#add permission
permission:
  enabled: true

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/tutorials/backend-to-backend-auth for
  # information on the format
  auth:
    keys:
      - secret: ${BACKEND_AUTH_SECRET_KEY}
  baseUrl: http://localhost:7007
  listen:
    port: 7007
  database:
    client: pg
    pluginDivisionMode: schema
    connection:
      host: ${DB_HOST}
      database: platform_devportal
      port: ${DB_PORT}
      user: ${DB_USER}
      password: ${DB_PASSWORD}
  #database:
  #  client: better-sqlite3
  #  connection: ':memory:'
  cache:
    store: memory
  cors:
    origin: http://localhost:3000 #http://localhost:3000
    methods: [GET, POST, PUT, DELETE, PATCH]
    credentials: true
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    script-src: ["'self'", "'unsafe-eval'", 'https://www.google-analytics.com']
    img-src: ["'self'", 'data:', 'https://www.google-analytics.com']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  reading:
    allow:
      - host: example.com
      - host: "*.mozilla.org"
  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir

# See README.md in the proxy-backend plugin for information on the configuration format
proxy:
  "/grafana/api":
    # May be a public or an internal DNS
    target: ${GRAFANA_DOMAIN}
    headers:
      Authorization: Bearer ${GRAFANA_TOKEN}

  "/argocd/api":
    target: ${ARGOCD_DOMAIN}
    changeOrigin: true
    # only if your argocd api has self-signed cert
    secure: true
    headers:
      Cookie:
        $env: ARGOCD_AUTH_TOKEN

organization:
  name: Devportal

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: "local" # Alternatives - 'external'
  generator:
    runIn: "local"
    # dockerImage: my-org/techdocs # use a custom docker image
    # pullImage: true # or false to disable automatic pulling of image (e.g. if custom docker login is required)
  publisher:
    type: "local" # Alternatives - 'googleGcs' or 'awsS3' or 'azureBlobStorage' or 'openStackSwift'. Read documentation for using alternatives.

kubernetes:
  serviceLocatorMethod:
    type: "multiTenant"
  clusterLocatorMethods:
    - type: "config"
      clusters:
        - url: ${KUBERNETES_URL}
          name: devportal-kubernetes
          authProvider: "serviceAccount"
          skipTLSVerify: false
          skipMetricsLookup: false
          serviceAccountToken: ${KUBERNETES_SERVICE_ACCOUNT_TOKEN}
          caData: ${KUBERNETES_CERTIFICATE_DATA}

argocd:
  username: ${ARGOCD_USER}
  password: ${ARGOCD_TOKEN}
  appLocatorMethods:
    - type: "config"
      instances:
        - name: argoInstance1
          url: ${ARGOCD_URL}
          token: ${ARGOCD_AUTH_TOKEN}
integrations:
  github:
    - host: github.com
      token: ${GITHUB_TOKEN_SECRET}
  bitbucketCloud:
    - username: ${BITBUCKET_CLOUD_USERNAME}
      appPassword: ${BITBUCKET_CLOUD_TOKEN}
  bitbucketServer:
    - host: ${BITBUCKET_SERVER_HOST}
      apiBaseUrl: ${BITBUCKET_SERVER_BASE_URL}
      token: ${BITBUCKET_SERVER_TOKEN}
  gitlab:
   - host: gitlab.com
     token: ${GITLAB_TOKEN_SECRET}

catalog:
  rules:
    - allow: [Component, API, Location, Template]
  providers:
    github:
      providerId: # the provider ID can be any camelCase string
        organization: veecode-platform # string
        catalogPath: /catalog-info.yaml # string
        filters:
          branch: master # string
          repository: devportal-catalog # Regex
          validateLocationsExist: true

    bitbucketCloud:
      yourProviderId: # identifies your ingested dataset
        catalogPath: /catalog-info.yaml # default value
        filters: # optional
        # projectKey: 'DEV' # optional; RegExp
          repoSlug: ${BITBUCKET_CLOUD_REPOSLUG} # optional; RegExp
        workspace: ${BITBUCKET_CLOUD_WORKSPACE}

    bitbucketServer:
      yourProviderId:
        host: ${BITBUCKET_SERVER_HOST}
        catalogPath: /catalog-info.yaml # default value
        filters: # optional
          projectKey: ${BITBUCKET_SERVER_PROJECT_KEY} # optional; RegExp
          repoSlug: ${BITBUCKET_SERVER_REPOSLUG} # optional; RegExp
    gitlab:
      yourProviderId:
        host: gitlab.com # Identifies one of the hosts set up in the integrations -
        branch: main # Optional. Uses `master` as default
        group: ${GITLAB_GROUP_NAME} # Optional. Group and subgroup (if needed) to look for repositories. If not present the whole project will be scanned
        entityFilename: catalog-info.yaml # Optional. Defaults to `catalog-info.yaml`
        #projectPattern: /[\s\S]*/ # Optional. Filters found projects based on provided patter. Defaults to `/[\s\S]*/`, what means to not filter anything

#   locations:
#   - type: url
#     target: https://github.com/mclarke47/dice-roller/blob/master/catalog-info.yaml
#   - type: url
#     target: https://github.com/backstage/backstage/blob/master/catalog-info.yaml

auth:
  environment: development
  ### Providing an auth.session.secret will enable session support in the auth-backend

  session:
    secret: ${AUTH_USER_SESSION_SECRET}
  providers:
    okta:
      development:
        clientId: ${OKTA_CLIENT_ID}
        clientSecret: ${OKTA_CLIENT_SECRET}
        audience: ${OKTA_AUDIENCE}
        authServerId: ${OKTA_AUTH_SERVER_ID}
        apiToken: ${OKTA_API_TOKEN}

    keycloak:
      development:
        metadataUrl: ${KEYCLOAK_METADATA_URL}
        clientId: ${KEYCLOAK_CLIENT_ID}
        clientSecret: ${KEYCLOAK_CLIENT_SECRET}
        prompt: auto

    github:
      development:
        clientId: ${AUTH_GITHUB_CLIENT_ID}
        clientSecret: ${AUTH_GITHUB_CLIENT_SECRET}

enabledPlugins:
  vault: true
  grafana: true
  kubernetes: true
  argocd: true

enabledGuest:
  enabled: false

apiManagement:
  enabled: true

vault:
  baseUrl: ${VAULT_BASE_URL}
  token: ${VAULT_TOKEN_RENEWABLE} #generate with vault token create -policy="default" -period=24h
  #publicUrl: http://127.0.0.1:8200
  #token: vault-plaintext-root-token
  secretEngine: ${VAULT_SECRET_ENGINE} # Optional. By default it uses 'secrets'
  #kvVersion: 1

grafana:
  # Publicly accessible domain
  domain: ${GRAFANA_DOMAIN}
  # Is unified alerting enabled in Grafana?
  # See: https://grafana.com/blog/2021/06/14/the-new-unified-alerting-system-for-grafana-everything-you-need-to-know/
  # Optional. Default: false
  unifiedAlerting: true
#todo put into env
okta:
  host: ${OKTA_TESTE_HOST}
  token: ${OKTA_TESTE_TOKEN}

kong:
  api-manager: ${KONG_OKTETO_HOST}
  admin-token: ${KONG_ADMIN_TOKEN}
  readOnlyMode: ${KONG_READ_ONLY_MODE} #boolean
  
