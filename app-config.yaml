app:
  title: Devportal
  baseUrl: http://localhost:3000
  #googleAnalyticsTrackingId: # UA-000000-0
  #datadogRum:
  #  clientToken: '123456789'
  #  applicationId: qwerty
  #   site: # datadoghq.eu default = datadoghq.com
  #   env: # optional

  support:
    url: https://github.com/backstage/backstage/issues # Used by common ErrorPage
    items: # Used by common SupportButton component
      - title: Issues
        icon: github
        links:
          - url: https://github.com/backstage/backstage/issues
            title: GitHub Issues
      - title: Discord Chatroom
        icon: chat
        links:
          - url: https://discord.gg/MUpMjP2
            title: '#backstage'

#add permission
permission:
  enabled: true

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/tutorials/backend-to-backend-auth for
  # information on the format
  auth:
    keys:
      - secret: ${BACKEND_AUTH_SECRET_KEY}
  baseUrl: http://localhost:7007
  listen:
    port: 7007
  database:
    client: pg
    #verificar com luan
    #pluginDivisionMode: schema
    connection:
      host: localhost
      database: platform_devportal
      port: ${DB_PORT}
      user: ${DB_USER}
      password: ${DB_PASSWORD}
  #database:
  #  client: better-sqlite3
  #  connection: ':memory:'

  cache:
    store: memory
  cors:
    origin: http://localhost:3000
    methods: [GET, POST, PUT, DELETE, PATCH]
    credentials: true
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  reading:
    allow:
      - host: example.com
      - host: '*.mozilla.org'
  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir

# See README.md in the proxy-backend plugin for information on the configuration format
proxy:
  '/grafana/api':
    # May be a public or an internal DNS
    target: ${GRAFANA_DOMAIN}
    headers:
      Authorization: Bearer ${GRAFANA_TOKEN}

  '/argocd/api':
    target: http://localhost:8081/api/v1/
    changeOrigin: true
    # only if your argocd api has self-signed cert
    secure: false
    headers:
      Cookie:
        $env: a9NRsQk-KOUqr2GI

organization:
  name: Devportal

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker'
    # dockerImage: my-org/techdocs # use a custom docker image
    # pullImage: true # or false to disable automatic pulling of image (e.g. if custom docker login is required)
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3' or 'azureBlobStorage' or 'openStackSwift'. Read documentation for using alternatives.

kubernetes:
  serviceLocatorMethod:
    type: 'multiTenant'
  clusterLocatorMethods:
    - type: 'config'
      clusters:
        - url: https://0.0.0.0:40777
          name: devportal-kubernetes
          authProvider: 'serviceAccount'
          skipTLSVerify: false
          skipMetricsLookup: false
          serviceAccountToken: eyJhbGciOiJSUzI1NiIsImtpZCI6ImEwN1RUb3Iwd2NvM0g5NUUtbEVqMUtMamRmZ2ozVlhqZTloUkN5VFFEMTQifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImRpY2Utcm9sbGVyLXRva2VuLWhiem5nIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImRpY2Utcm9sbGVyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiNzMxYzgxMTEtOWY2NC00YTk1LWIxZjItNjU5YTYyZGViNjgxIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OmRlZmF1bHQ6ZGljZS1yb2xsZXIifQ.vEMnPtmLNUTtw1nZ70ed6dbpvHlnWnN17zYA33jwSi4DVFIqrD35aW58xPYSlOhpLMoZ6utRPzispGLTo9MXROv0qWYFZ_dZnPtMOeev9_j01NljcvivTtCeNBB9_hOMRTD9SjGzK8Tsn4XK_1l5lAMDLQHeC_rdnsVKDm8MestfwcikAW7iqehxUhYdRBIMK6ggXTMv0tVYjE1dBhe4Qd1vMfq0nTyAqdpPRtogzNaBt6cTBTkN6mXcjzvE_M_C5iTzQ5UrWG10l2yvuY7haP9SnVbWmv9qFbl9hUzRN5Q_QHj7lj86uH3oE_s_EnuXHPKz1swLiYrkA_7XiXKJsg #optional
          caData: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJkekNDQVIyZ0F3SUJBZ0lCQURBS0JnZ3Foa2pPUFFRREFqQWpNU0V3SHdZRFZRUUREQmhyTTNNdGMyVnkKZG1WeUxXTmhRREUyTnpJNE5ETTBPRGt3SGhjTk1qTXdNVEEwTVRRME5EUTVXaGNOTXpNd01UQXhNVFEwTkRRNQpXakFqTVNFd0h3WURWUVFEREJock0zTXRjMlZ5ZG1WeUxXTmhRREUyTnpJNE5ETTBPRGt3V1RBVEJnY3Foa2pPClBRSUJCZ2dxaGtqT1BRTUJCd05DQUFTV245MEs3Q2NYam9QRFBKeFBQQ0xqc0FpcGRuQ1k5Yy9leDZGbVJCaTkKbEhNNjJnL3JhZERrTnVERVRSU2NYZUNEd28zclpKSTNFbllSQUF5SzdzZ3BvMEl3UURBT0JnTlZIUThCQWY4RQpCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVWlSWWgrUHRrb0pkdEhvVk9jZVh2Cm4zS2lBV293Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloQU8rYlczN3cxSVNjdXE1REZKOHBqeU1VbFFQR1YrekUKWlNjRy9CeTZpTG1PQWlBWXlYRTZyT0VNMEx1U1IrMmdIektKU1RSWXN2dWV3VkNiRi9DTGpLakw1UT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K #optional

argocd:
  username: admin
  password: a9NRsQk-KOUqr2GI
  appLocatorMethods:
    - type: 'config'
      instances:
        - name: argoInstance1
          url: http://localhost:8081
          token: a9NRsQk-KOUqr2GI

integrations:
  github:
    - host: github.com
      token: ${GITHUB_TOKEN_SECRET}

catalog:
  rules:
    - allow: [Component, API, Location, Template]
  providers:
    github:
      providerId: # the provider ID can be any camelCase string
        organization: veecode-platform # string
        catalogPath: /catalog-info.yaml # string
        filters:
          branch: master # string
          repository: devportal-spechouse # Regex
          validateLocationsExist: true

  locations:
  - type: url
    target: https://github.com/mclarke47/dice-roller/blob/master/catalog-info.yaml
  - type: url
    target: https://github.com/backstage/backstage/blob/master/catalog-info.yaml

auth:
  environment: development
  ### Providing an auth.session.secret will enable session support in the auth-backend

  session:
    secret: ${AUTH_USER_SESSION_SECRET}
  providers:
    okta:
      development:
        clientId: ${OKTA_CLIENT_ID}
        clientSecret: ${OKTA_CLIENT_SECRET}
        audience: ${OKTA_AUDIENCE}
        authServerId: ${OKTA_AUTH_SERVER_ID}
        apiToken: ${OKTA_API_TOKEN}

    keycloack-auth-provider:
      development:
        metadataUrl: ${KEYCLOAK_METADATA_URL}
        clientId: ${KEYCLOAK_CLIENT_ID}
        clientSecret: ${KEYCLOAK_CLIENT_SECRET}
        prompt: auto

    github:
      development:
        clientId: ${AUTH_GITHUB_CLIENT_ID}
        clientSecret: ${AUTH_GITHUB_CLIENT_SECRET}

vault:
  baseUrl: ${VAULT_BASE_URL}
  token: ${VAULT_TOKEN_RENEWABLE} #generate with vault token create -policy="default" -period=24h
  #publicUrl: http://127.0.0.1:8200
  #token: vault-plaintext-root-token
  #secretEngine: teste # Optional. By default it uses 'secrets'
  #kvVersion: 1
  
grafana:
  # Publicly accessible domain
  domain: ${GRAFANA_DOMAIN}
  # Is unified alerting enabled in Grafana?
  # See: https://grafana.com/blog/2021/06/14/the-new-unified-alerting-system-for-grafana-everything-you-need-to-know/
  # Optional. Default: false
  unifiedAlerting: true

okta:
  host: ${OKTA_TESTE_HOST}
  token: ${OKTA_TESTE_TOKEN}

kong:
  api-manager: ${KONG_TESTE_HOST}
