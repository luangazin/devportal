name: Publish Devportal Docker/Helm Chart

on:
  push:
    branches: ["main"]

jobs:
  #Getting requided versions for next steps
  requirements:
    runs-on: [self-hosted, Linux, ARM64]
    outputs:
      app_version: ${{ env.app_version }}
      chart_version: ${{ env.chart_version }}
      node_version: ${{ env.node_version }}
    steps:
      - name: Getting versions
        run: |
          echo "app_version=$(jq -r '.version' package.json)" >> $GITHUB_ENV
          echo "chart_version=$(yq e '.version' chart/Chart.yaml)" >> $GITHUB_ENV
          echo "node_version=$(cat .nvmrc | grep -o '[0-9]*')" >> $GITHUB_ENV

  #parallel build for x64 and amr64
  buildDevportal:
    needs: [requirements]
    strategy:
      matrix:
        os: [ubuntu-latest, [self-hosted, Linux, ARM64]]
    runs-on: ${{ matrix.os }}
    env:
      NODE_VERSION: 18
    steps:
      - uses: actions/checkout@v3
      - name: Building Devportal
        run: |
          echo "node_version=${{ needs.requirements.outputs.node_version }}"
          echo "app_version=${{ needs.requirements.outputs.app_version }}"
          echo "chart_version=${{ needs.requirements.outputs.chart_version }}"
      # - uses: actions/setup-node@v3
      #   with:
      #     node-version: ${{ env.node_version }}
      #     cache: yarn      
      # - name: Building Devportal
      #   run: |
      #     yarn install --frozen-lockfile
      #     yarn tsc
      #     yarn build
      
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v2
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Publish to Docker Hub
      #   uses: docker/build-push-action@v4
      #   with:
      #     file: packages/backend/Dockerfile
      #     context: .
      #     # platforms: linux/amd64,linux/arm64
      #     tags: veecode/devportal-bundle:${{ needs.requirements.outputs.app_version }}, veecode/devportal-bundle:latest
      #     push: true
  
  # publishHelm:
  #   needs: [requirements, buildDevportal]
  #   runs-on: [self-hosted, Linux, ARM64]
  #   steps:
  #     - uses: actions/checkout@v3  
  #     - name: Build Package Helm
  #       run: |
  #         yq e '.image.repository = "veecode/devportal-bundle" ' -i chart/values.yaml
  #         yq e '.image.tag = "${{ needs.requirements.outputs.app_version }}" ' -i chart/values.yaml
  #         yq e '.appVersion= "${{ needs.requirements.outputs.app_version }}" ' -i chart/Chart.yaml
  #         mkdir -p charts
  #         helm package --sign --key 'Veecode Platform' --passphrase-file ./chart/passphrase --keyring ./chart/certificate.gpg chart --destination charts/

  #     - name: Publish Helm Charts
  #       uses: cpina/github-action-push-to-another-repository@main
  #       env:
  #         API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
  #       with:
  #         source-directory: 'charts/'
  #         destination-github-username: ${{ github.repository_owner }}
  #         destination-repository-name: 'public-charts'
  #         user-email: github-actions@vee.codes
  #         commit-message: "Publish new version devportal-${{ needs.requirements.outputs.chart_version }}"
  #         target-branch: 'main'