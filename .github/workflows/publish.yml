name: Publish Devportal Docker/Helm Chart

on:
  push:
    branches: ["main"]

jobs:
  #Getting requided versions for next steps
  requirements:
    runs-on: [self-hosted, Linux, ARM64]
    outputs:
      app_version: ${{ env.app_version }}
      chart_version: ${{ env.chart_version }}
      node_version: ${{ env.node_version }}
    steps:
      - uses: actions/checkout@v3
      - name: Getting versions
        run: |
          echo "app_version=$(jq -r '.version' package.json)" >> $GITHUB_ENV
          echo "chart_version=$(yq e '.version' chart/Chart.yaml)" >> $GITHUB_ENV
          echo "node_version=$(cat .nvmrc | grep -o '[0-9]*')" >> $GITHUB_ENV

  #parallel build for x64 and amr64
  buildDevportal:
    needs: [requirements]
    strategy:
      matrix:
        # os: [ubuntu-latest, [self-hosted, Linux, ARM64]]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    env:
      NODE_VERSION: ${{ needs.requirements.outputs.node_version }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: yarn

      - name: Check if chart docs will be generated as expected
        run: |
          bash chart/generate-docs.sh
          if [ ! -f "./chart/README.md" ]; then
            echo "Error: chart/README.md does not exist."
            exit 1
          fi

      - name: Building Devportal
        run: |
          yarn install --frozen-lockfile
          yarn tsc
          yarn build
      
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v2
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Publish to Docker Hub
        uses: docker/build-push-action@v4
        with:
          file: packages/backend/Dockerfile
          context: .
          tags: veecode/devportal-bundle:${{ needs.requirements.outputs.app_version }}, veecode/devportal-bundle:latest
          push: true
  
  publishing:
    needs: [requirements, buildDevportal]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Installing frigate
        run:  pip install frigate
      
      - name: Generating Helm Documentation
        run: bash chart/generate-docs.sh

      - name: Build Helm Package
        run: |
          yq e '.image.repository = "veecode/devportal-bundle" ' -i chart/values.yaml
          yq e '.image.tag = "${{ needs.requirements.outputs.app_version }}" ' -i chart/values.yaml
          yq e '.appVersion= "${{ needs.requirements.outputs.app_version }}" ' -i chart/Chart.yaml
          mkdir -p charts
          helm package --sign --key 'Veecode Platform' --passphrase-file ./chart/passphrase --keyring ./chart/certificate.gpg chart --destination charts/

      - name: Publish Helm Charts
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source_file: "charts/"
          destination_repo: "veecode-platform/public-charts"
          destination_branch: "main"
          user_email: 'veecode-bot@vee.codes'
          user_name: 'veecode-bot'
          commit_message: "Publish new version devportal-${{ needs.requirements.outputs.chart_version }}"
      
      # - name: Generating dependencies version files
      #   id: cli-version
      #   run: |
      #     mkdir -p gh-pages/docs/examples
      #     cp -r docs/public/**/* gh-pages/docs/examples/
      #     cp ./keycloak/realm-platform-devportal.json gh-pages/docs/examples/

      # - name: Publishing docs files
      #   uses: cpina/github-action-push-to-another-repository@main
      #   env:
      #     API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      #   with:
      #     source-directory: 'gh-pages'
      #     destination-github-username: ${{ github.repository_owner }}
      #     destination-repository-name: 'support'
      #     user-email: veecode-bot@vee.codes
      #     commit-message: 'Update docs samples'
      #     target-branch: gh-pages
