name: Publish Devportal Docker/Heml

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install Pre Requisitos
      run: |
          wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          wget -qO /usr/local/bin/jq https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64
          chmod a+x /usr/local/bin/yq
          chmod a+x /usr/local/bin/jq
          yq --version
          jq --version
          cp packages/backend/Dockerfile ./
          VERSION=`jq -r '.version' package.json`
          echo $VERSION
          echo "versao=$VERSION" >> $GITHUB_ENV
          yarn install --frozen-lockfile
          yarn tsc
          yarn build
          
    - name: Publish to Docker Hub
      uses: docker/build-push-action@v1
      with:
       path: ./
       username: ${{ secrets.DOCKER_USER}}
       password: ${{ secrets.DOCKER_PASS }}
       repository: ${{ secrets.DOCKER_REPO }}
       tags: ${{ env.versao }}

    - name: Build Package Helm
      run: |
        yq e '.image.repository = "ipaasvertigo/devportal" ' -i devportal/values.yaml
        yq e '.image.tag = "${{ env.versao }}" ' -i devportal/values.yaml
        yq e '.appVersion= "${{ env.versao }}" ' -i devportal/Chart.yaml
        cat devportal/Chart.yaml
        cat devportal/values.yaml
        helm package devportal
        mkdir charts
        mv *tgz charts/
        CHART=`ls charts`
        echo "chart=$CHART" >> $GITHUB_ENV

    - name: Publish Helm Charts
      uses: dmnemec/copy_file_to_another_repo_action@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}

      with:
         source_file: "charts/${{ env.chart }}"
         destination_repo: 'vfipaas/public-charts'
         destination_folder: 'charts'
         destination_branch: 'gh-pages'
         user_email: '${{ secrets.GIT_EMAIL }}'
         user_name: ${{ secrets.GIT_USER }}'
         commit_message: 'Commit via Pipeline Devportal'
